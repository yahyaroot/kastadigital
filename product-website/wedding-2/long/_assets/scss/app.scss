/* ==== COMPILE =====
sass --watch wedding-2/long/_assets/scss/app.scss:wedding-2/long/_assets/css/app.min.css --style compressed
*/

@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&family=Rochester&display=swap');
$colors: (
    'primary'       : #3A4E3F,
    'primary-500'   : #678170,
    'secondary'     : #BCB683,
    'light'         : #BCB683,
    'danger'        : #957777,
    'gray'          : #908F89,
    'gray-800'      : #B7BDB9,
    'dark'          : #122617,
    'dark-500'      : #848986,
    'white'         : #FFFFFF,
    'black'         : #000000,
);
$breakpoints: (
    'sm'        : 576px,
    'md'        : 768px,
    'lg'        : 992px,
    'xl'        : 1200px,
    'xxl'        : 1400px,
);
$loop-breakpoints: map-remove($breakpoints, 'xxl');

$font-type-secondary: 'Rochester', cursive;
@function color($value) { @return map-get($colors, $value); }
@function breakpoint($value) { @return map-get($breakpoints, $value); }

// RESET
html,:root {
    font-size: 10px;
    scroll-behavior: smooth;
    @media screen and (max-width: breakpoint('sm')) {
        font-size: 9px;
    }
}
html,body {
    max-width: 100vw;
    max-width: 100%;
    overflow-y: auto;
    overflow-x: hidden;
}
body {
    font-family: 'Poppins', sans-serif;
    font-size: 1.4rem;
    font-weight: 400;
    color: map-get($colors, 'dark');
}
h1,h2,h3,h4,h5,h6 { font-weight: normal; }
h1 { 
    font-size: 7.2rem; 
    @media screen and (max-width: breakpoint('md')) { font-size: 5.4rem; }
}
h2 { 
    font-size: 4.8rem; 
    @media screen and (max-width: breakpoint('md')) { font-size: 3.2rem; }
}
h3 { font-size: 4.2rem; }
h4 { font-size: 3.6rem; }
h5 { font-size: 2.4rem; }
h6 { 
    font-size: 1.8rem; 
    @media screen and (max-width: breakpoint('md')) { font-size: 1.6rem !important; }
}
p { font-size: 1.4rem; }
.text-lg { 
    font-size: 1.8rem; 
    @media screen and (max-width: breakpoint('md')) { font-size: 1.4rem !important; }
}
.text-md { font-size: 1.6rem; }
.text-sm { font-size: 1.2rem; }
.text-xs { font-size: 1rem; }


body#index {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    position: relative;
    z-index: 1;
    min-height: 100vh;
    color: color('black');
    &.opening-show {
        min-height: 100vh;
        max-height: 100vh;
        overflow: hidden;
        .navbar {
            display: none;
        }
    } 
    &.opening-hide {
        min-height: 100vh;
        max-height: unset;
        section#opening {
            animation: opening-hide 2s ease-in-out forwards;
        }
    }

    section#opening {
        position: fixed;
        right: 0; left: 0; top: 0; bottom: 0;
        z-index: 9999;
        color: color('dark');
        padding: 10rem 0;
        background-image: 
            linear-gradient(180deg, rgba(18, 38, 23, 0.7) 0%, rgba(18, 38, 23, 0.7) 100%),
            url('../img/bg/header.jpg');
        background-size: cover, cover;
        background-repeat: no-repeat;
        background-position: center, center;
        min-height: 100vh;
        min-height: 100vh;
        overflow-x: hidden;
        overflow-y: auto;
        transition: all .3s ease-in;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }


    header#header {
        padding: 10rem 0;
        background-image: 
            linear-gradient(180deg, rgba(18, 38, 23, 0.7) 0%, rgba(18, 38, 23, 0.7) 100%),
            url('../img/bg/header.jpg');
        background-size: cover, cover;
        background-repeat: no-repeat;
        background-position: center, center;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        @media screen and (min-width: breakpoint('xxl')) {
            min-height: 768px;
        }
        h1 {
            @media screen and (max-width: breakpoint('md')) {
                font-size: 5rem;
            }
        }
    }

    section#section-1 {
        padding: 6rem 0;
        background-color: #E5E5E5;
    }

    section#section-2 {
        min-height: 38rem;
        background-image: 
            linear-gradient(180deg, rgba(18, 38, 23, 0.7) 0%, rgba(18, 38, 23, 0.7) 100%),
            url('../img/bg/section-2.jpg');
        background-size: cover, cover;
        background-repeat: no-repeat;
        background-position: center, center;
        background-attachment: fixed;
    }

    section#section-3 {
        padding: 10rem 0;
    }

    section#section-4 {
        padding: 10rem 0;
    }

    section#section-5 {
        padding: 10rem 0;
    }

    section#section-6 {
        padding: 10rem 0;
    }

    section#section-7 {
        padding: 10rem 0;
    }

    section#section-8 {
        padding: 10rem 0;
        #section-8-list-message {
            padding: 0;
            padding-right: 1rem;
            margin-right: -1rem;
            overflow-x: hidden;
            overflow-y: auto;
            list-style: none;
            max-height: calc(100vh - 174px);
            .list-item {
                padding: 2rem;
            }
        }
    }

    section#section-9 {
        padding: 10rem 0 30rem;
    }

    footer#footer {
        padding: 2rem 0;
        background-color: color('dark');
        color: color('white');
    }
}



// COMPONENTS
// override
.container {
    @media screen and (max-width: breakpoint('md')) {
        padding-left: 2rem;
        padding-right: 2rem;
    }
}
.navbar {
    background-color: unset;
    color: color('white');
    padding: 1rem 3rem;
    position: fixed;
    left: 0; right: 0;
    transition: all .5s ease-in;
    z-index: 99;
    background-color: color('primary');
    @media screen and (max-width: breakpoint('md')) {
        padding: 2rem 0;
    }
    .navbar-brand, .navbar-toggler {
        color: color('white');
    }
    .navbar-nav {
        .nav-item {
            padding: 0 2rem;
            @media screen and (max-width: breakpoint('md')) { padding: 0; }
            &:last-child {
                @media screen and (min-width: breakpoint('md')) { margin-right: 8rem; }
            }
            .text-dec-navbar {
                display: flex;
                align-items: center; justify-content: center;
                background-image: 
                    url('../img/decoration/text-dec-spouse.svg');
                background-size: contain;
                background-repeat: no-repeat;
                background-position: center;
                font-size: 10px;
                width: 10em; height: 8em;
                text-align: center;
                color: color('white');
                font-family: $font-type-secondary;
                a { font-size: 2em; }
            }

            .nav-link {
                color: color('white');
                position: relative;
                display: inline-flex;
                align-items: center; justify-content: center;
                &::after {
                    content: '';
                    position: absolute;
                    display: block;
                    height: 2px;
                    bottom: -.4rem;
                    transition: all .8s ease-in;
                }
                &:hover {
                    &::after {
                        width: calc(70% + 1px);
                        opacity: .7;
                        background-color: color('white');
                    }
                }
                @media screen and (max-width: breakpoint('md')) {
                   font-size: 1.6rem;
                   margin-top: 1.2rem;
                }
                &.active {
                    color: color('white') !important;
                    &::after {
                        width: calc(70% + 1px);
                        opacity: 1;
                        background-color: color('white');
                    }
                }
            }
        }
    }
}
.btn {
    border-radius: .5rem;
    outline: unset !important;
    font-size: 1.4rem;
    padding: 1.6rem 3.4rem;
    transition: all .3s ease-in;
    &.btn-primary {
        background-color: color('primary') !important;
        border: unset !important;
        &:hover {
            box-shadow: 0 10px 30px rgba(color('primary'), .3);
        }
    }
    &.btn-outline-primary {
        border: 1px solid color('primary');
        background-color: color('white') !important;
        color: color('primary');
        &:hover {
            box-shadow: 0 10px 30px rgba(color('primary'), .15);
        }
    }
    &.btn-secondary {
        background-color: color('secondary') !important;
        border: unset !important;
        &:hover {
            box-shadow: 0 10px 30px rgba(color('secondary'), .3);
        }
    }
}

.form-label {
    font-size: 1.6rem;
    color: color('dark');
    font-weight: 300;
}
.form-check {
    display: flex;
    align-items: center;
    .form-check-input {
        width: 3rem; height: 3rem;
        border: 0;
        background-color: #F5F5F5;
        margin-right: 1.6rem;
        &:checked {
            background-color: color('primary');
            border-color: color('primary');
            box-shadow: 0 0 1px rgba(color('primary'), .4);
        }
    }
    .form-check-label {
        font-size: 1.6rem;
        color: color('dark');
        font-weight: 300;
        cursor: pointer;
    }
}
.form-control {
    padding: 1.45rem 2rem;
    font-size: 1.8rem;
    border: 1px solid color('dark-500');
    transition: all .3s ease-in;
    &.is-invalid, &.is-valid {
        background-image: unset;
    }
    &.is-valid { border-color: color('primary');}
    &.is-invalid { border-color: color('danger');}
    &:focus, &:active {
        outline: unset !important;
        box-shadow: unset !important;
        border: 1px solid color('dark');
    }
    &::placeholder {
        font-weight: 300;
        color: #949494;
    }
}
.form-select {
    padding: 1.7rem;
    font-size: 1.4rem;
    cursor: pointer;
    border: 1px solid color('dark-500');
    &.is-invalid, &.is-valid {
        background-image: unset;
    }
    &.is-valid { border-color: color('primary');}
    &.is-invalid { border-color: color('danger');}
    &:focus, &:active {
        outline: unset !important;
        box-shadow: unset !important;
        border: 1px solid color('dark');
    }
}
.valid-feedback {color: color('primary');}
.invalid-feedback {color: color('danger');}
// custom
.btn {
    &#btn-play {
        position: fixed;
        bottom: 2rem; right: 2rem;
    }
    &#btn-to-top {
        position: fixed;
        bottom: 8rem; right: 2rem;
        display: none;
        animation: pop-out .3s linear forwards;
    }
    &.btn-light {
        border: unset;
        width: 5rem !important; height: 5rem !important;
        padding: unset;
        display: flex; 
        align-items: center; justify-content: center;
        border-radius: 50%;
        z-index: 999;
        box-shadow: unset !important;
        background-color: rgba(color('black'), .8);
        &.active {
            i { color: color('primary');}
        }
        &:focus {
            box-shadow: unset;
        }
        i { color: color('white') }
    }
    &.btn-icon {
        padding: 1rem !important;
        width: 4rem !important; height: 4rem !important;
        padding: unset;
        display: flex; 
        align-items: center; justify-content: center;
        border-radius: 50%;
        font-size: 1.2rem;
    }
}
.img-wrapper {
    overflow: hidden;
    img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
}
.img-wrapper-spouse {
    font-size: 10px;
    width: 27em; height: 27em;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    &::after {
        content: '';
        display: block;
        width: 28.5em; height: 28.5em;
        position: absolute;
        left: -2em; top: -1.5em;
        background-image: url('../img/decoration/img-wrapper-spouse.png');
        background-position: left top;
        background-repeat: no-repeat;
        background-size: 100% 100%;
    }
    .img-wrapper {
        width: 27em;
        height: 27em;
        border-radius: 50%;
    }
}
.card {
    border: 0;
    &.card-story {
        position: relative;
        border-radius: 1rem;
        font-size: 10px;
        width: 34em; height: 45em;
        display: flex;
        align-items: stretch; justify-content: center;
        overflow: visible;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        padding: 0;
        z-index: 1;
        &::before {
            content: '';
            display: block;
            width: 16em; height: 23em;
            position: absolute;
            z-index: -1;
            background-size: contain;
            background-repeat: no-repeat;
        }
        &::after {
            content: '';
            display: block;
            position: absolute;
            z-index: 3;
            background-size: contain;
            background-repeat: no-repeat;
        }
        &.card-story-left {
            transform: rotate(4deg);
            &::before {
                left: -12em;
                background-image: url('../img/decoration/flower-left.png');
            }
            &::after {
                align-self: center;
                width: 24em; height: 6.4em;
                top: -2.5em; left: 7em;
                background-image: url('../img/decoration/card-story-left.png');
            }
        }
        &.card-story-right {
            transform: rotate(-4deg);
            &::before {
                right: -12em;
                background-image: url('../img/decoration/flower-right.png');
            }
            &::after {
                align-self: center;
                width: 21em; height: 5.4em;
                transform: rotate(3deg);
                top: -2.5em; right: 4em;
                background-image: url('../img/decoration/card-story-right.png');
            }
        }
        .card-body {
            position: relative;
            background-color: white;
            z-index: 2;
            padding: 2rem 2rem;
            flex-grow: 1;
            img {
                width: 100%;
            }
        }
    }
}
.divider {
    background-color: color('black');
    &.divider-horizontal { width: 100%; height: 1px; }
    &.divider-vertical { width: 1px; height: 100%; }
    @each $breakpoint-name, $breakpoint-value in $loop-breakpoints {
        @media screen and (min-width: $breakpoint-value) {
            &.divider-#{$breakpoint-name}-vertical { width: 1px !important; height: 100%; }
            &.divider-#{$breakpoint-name}-horizontal { width: 100%; height: 1px !important; }
        }
    }
}

// UTILITY
.font-type-secondary { font-family: $font-type-secondary; }

.text-white { color: color('white') !important; }
.text-primary { color: color('primary') !important; }
.text-dark { color: color('dark') !important; }
.text-dark-500 { color: color('dark-500') !important; }
.text-gray { color: color('gray') !important; }
.text-gray-800 { color: color('gray-800') !important; }

.text-spacing-default { 
    letter-spacing: 0.6rem; 
    @media screen and (max-width: breakpoint('md')) {
        letter-spacing: 0.4rem; 
    }
}

.font-light {font-weight: 300;}
.font-normal {font-weight: 400;}
.font-semibold {font-weight: 600;}
.font-bold {font-weight: 700;}
.font-extrabold {font-weight: 800;}
.font-boldest {font-weight: 900;}

// background
.bg-primary {background-color: color('primary');}
.bg-gray {background-color: color('gray');}
.bg-gray-800 {background-color: color('gray-800');}

// border
.rounded-3 {
    border-radius: 1.5rem !important;
}

// misc
.csr-pointer {cursor: pointer;}

$spacing-props: (
    margin: m, 
    margin-left: ml, 
    margin-right: mr, 
    margin-top: mt, 
    margin-bottom: mb, 
    (margin-left, margin-right): mx,
    (margin-top, margin-bottom): my,
    padding: p, 
    padding-left: pl, 
    padding-right: pr, 
    padding-top: pt, 
    padding-bottom: pb, 
    (padding-left, padding-right): px,
    (padding-top, padding-bottom): py,
);
@for $i from 0 to 11 {
    @each $prop-name, $prop-abb in $spacing-props {
        .#{$prop-abb}-#{$i} {
            @each $pn in $prop-name {
                #{$pn}: ($i * 1) * .5rem !important;
            }
        }
    }
}
@for $i from 0 to 11 {
    @each $prop-name, $prop-abb in $spacing-props {
        @each $breakpoint-name, $breakpoint-value in $loop-breakpoints {
            .#{$prop-abb}-#{$breakpoint-name}-#{$i} {
                @media screen and (min-width: $breakpoint-value) {
                    @each $pn in $prop-name {
                        #{$pn}: ($i * 1) * .5rem !important;
                    }
                }
            }
        }
    }
}
.mb-12 { margin-bottom: 6rem; }
.mb-16 { margin-bottom: 8rem; }
.mb-sm-16 {
    @media screen and (min-width: breakpoint('sm')) {
        margin-bottom: 8rem !important;
    }
}
.mb-lg-16 {
    @media screen and (min-width: breakpoint('lg')) {
        margin-bottom: 8rem !important;
    }
}
.mb-lg-50 {
    @media screen and (min-width: breakpoint('lg')) {
        margin-bottom: 25rem !important;
    }
}
// SIZING
// loop to max size in base.scss
$sizing-props: (
    width: w, 
    height: h,
);
// UNIT SIZE (0, REM)
@for $i from 0 to (101) {
    @each $prop-name, $prop-abb in $sizing-props {
        // IF 0 : w-0 (no w-0rem)
        @if ($i == 0) {
            .#{$prop-abb}-#{$i} { #{$prop-name}: $i !important; }
        } @else {
            .#{$prop-abb}-#{$i}rem { #{$prop-name}: $i * 1rem !important; }
        }
    }
}
// UNIT SIZE (0, REM) RESPONSIVE
@for $i from 0 to (101) {
    @each $prop-name, $prop-abb in $sizing-props {
        @each $breakpoint-name, $breakpoint-value in $loop-breakpoints {
            // IF 0 : w-lg-0 (not w-lg-0rem)
            @if ($i == 0) {
                .#{$prop-abb}-#{$breakpoint-name}-#{$i} { 
                    @media screen and (min-width: $breakpoint-value) {
                        #{$prop-name}: $i !important; 
                    }
                }
            } @else {
                .#{$prop-abb}-#{$breakpoint-name}-#{$i}rem { 
                    @media screen and (min-width: $breakpoint-value) {
                        #{$prop-name}: $i * 1rem !important; 
                    }
                }
            }
        }
    }
}
// PERCENTAGE SIZE
@for $i from 25 to 101 {
    @if ($i % 25 == 0) {
        @each $prop-name, $prop-abb in $sizing-props {
            .#{$prop-abb}-#{$i} { #{$prop-name}: $i * 1%; }
            @each $breakpoint-name, $breakpoint-value in $loop-breakpoints {
                @media screen and (min-width: $breakpoint-value) {
                    .#{$prop-abb}-#{$breakpoint-name}-#{$i} { #{$prop-name}: $i * 1% !important; }
                }
            }
        }
    }
}

// OBJECT
.obj-fit {
    overflow: hidden;
    &.obj-fit-cover {
        img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
        }
    }
    &.obj-fit-contain {
        img {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }
    }
    &.obj-fit-fill {
        img, video {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }
    }
}


// vendors custom
// lightgallery
#row-lightgallery {
    [data-src] {
        img {
            transition: all .4s ease-in;
        }
        &:hover {
            cursor: pointer;
            img {
                transform: scale(1.02);
            }
        }
    }
    .img-wrapper {
        overflow: visible;
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center; justify-content: flex-start;
        .img-wrapper-gallery-label {
            font-size: 4px;
            position: absolute;
            top: -5em;
            z-index: 11;
            border: 1em solid color('white');
            border-radius: 50%;
            width: 11em; height: 11em;
            background-color: color('secondary');
            color: color('white');
            display: flex; 
            flex-direction: column;
            align-items: center; justify-content: center;
            text-align: center;
            h5 { font-size: 2em; font-weight: 700; }
            div { font-size: 1.4em; }
            @media screen and (min-width: breakpoint('md')) { font-size: 6px; }
            @media screen and (min-width: breakpoint('lg')) { font-size: 10px; }
        }
        .img-wrapper-gallery {
            border-radius: 1rem;
            position: relative;
            overflow: hidden;
            width: 100%;

            &.img-wrapper-gallery-1 {
                height: 8rem;
                @media screen and (min-width: breakpoint('md')) { height: 18rem; }
                @media screen and (min-width: breakpoint('lg')) { height: 32rem; }
            }
            &.img-wrapper-gallery-2 {    
                height: 18rem;
                @media screen and (min-width: breakpoint('md')) { height: 30rem; }
                @media screen and (min-width: breakpoint('lg')) { height: 50rem; }
            }

            img {
                border-radius: 1rem;
                width: 100%;
                height: 100%;
                object-fit: cover;
            }
        }
    }
}
// aos
[data-aos="card-story-left"] {
    opacity: 0;
    transform: translateX(-40%) rotate(0deg) !important;
    transition-property: all;
  
    &.aos-animate {
        opacity: 1;
        transform: translateX(0) rotate(4deg) !important;
    }
}
[data-aos="card-story-right"] {
    opacity: 0;
    transform: translateX(40%) rotate(0deg) !important;
    transition-property: all;
  
    &.aos-animate {
        opacity: 1;
        transform: translateX(0) rotate(-4deg) !important;
    }
}


@keyframes opening-hide {
    0% {
        transform: translateY(0);
        opacity: 1;
    } 50% {
        transform: translateY(1rem);
        opacity: 1;
    } 100% {
        transform: translateY(-100%);
        opacity: 0;
    }
}
@keyframes pop-out {
    0% {
        transform: scale(1);
    } 50% {
        transform: scale(1.1);
    } 100% {
        transform: scale(1);
    }
}

